generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  // 🔹 추가된 필드들
  role      Role     @default(USER)
  groupId   String?  // 그룹에 소속될 수 있음
  group     Group?   @relation(fields: [groupId], references: [id])

  posts     Post[]
  reactions Reaction[]
}

model Group {
  id             String   @id @default(uuid())
  name           String
  invitationCode String   @unique
  hasAdmin       Boolean  @default(false)
  createdAt      DateTime @default(now())

  users          User[]
  posts          Post[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author    User     @relation(fields: [authorId], references: [id])
  authorId  String

  groupId   String   // 🔹 작성된 글이 어떤 그룹에 속하는지
  group     Group    @relation(fields: [groupId], references: [id])

  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(uuid())
  emojiKey  String
  emoji     String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  userId    String

  post      Post     @relation(fields: [postId], references: [id])
  postId    String

  @@unique([userId, postId]) // 한 게시글당 한 유저는 하나의 반응만
}

enum Role {
  USER
  ADMIN
}
